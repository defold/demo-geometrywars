uniform mat4 view_proj;
uniform mat4 world;
uniform vec4 attractor1;
uniform vec4 attractor2;
uniform vec4 attractor3;
uniform vec4 attractor4;

varying vec2 var_texcoord0;

attribute vec3 position;
attribute vec3 normal;
attribute vec2 texcoord0;

vec3 calc_attractor(vec4 attractor, vec3 pos)
{
	vec3 dir =  attractor.xyz - position;
	float distSq = dot(dir, dir);
	distSq = max(20.0 * 20.0, distSq);
//	float power =  (1.0 / (distSq * distSq)) * attractor.w * 5600.0;
	float power =  (1.0 / (distSq)) * attractor.w * 5.0;
	power = min(0.6, power);
	power = max(-0.5, power);
	
	return dir * power;
}

void main()
{
	vec3 pos = position;
	pos += calc_attractor(attractor1, position);
	pos += calc_attractor(attractor2, position);
	pos += calc_attractor(attractor3, position);
	pos += calc_attractor(attractor4, position);
	 
    mat4 mvp = view_proj * world;
    gl_Position = mvp * vec4(pos.x, pos.y, pos.z, 1);
    var_texcoord0 = texcoord0;
}
