uniform mat4 view_proj;
uniform mat4 world;
uniform vec4 attractor1;
uniform vec4 attractor2;
uniform vec4 attractor3;
uniform vec4 attractor4;

varying vec2 var_texcoord0;

attribute vec3 position;
attribute vec3 normal;
attribute vec2 texcoord0;

void main()
{
    float delta = (position.z - position.x) * 1.0;
    
    vec4 attractor = attractor1;
    
    float c = position.z - attractor.x;
    float t = position.y - attractor.y;
    
    float T = c*c + t*t + 1000.0;
    
    float mx = c / (T);
    
    float power = attractor.w;
    mx *= power;
    
    vec3 tangent = normalize(vec3(mx, t, 0.0));
    vec3 normal = vec3(tangent.y, -tangent.x, 0);
    
    float fix_edge = (position.z <= 0.001 || position.z > 1270.0) ? 0.0 : 1.0;    
    
    float x = c + mx * 1.0 * fix_edge;
    float y = t;
     
    vec3 pos = vec3(x + attractor.x, position.y, 0.0) + delta * normal;
    
    mat4 mvp = view_proj * world;
    gl_Position = mvp * vec4((attractor.x != 0.0) ? attractor.x : position.x, pos.y, pos.z, 1.0);
    var_texcoord0 = texcoord0;    
}
